apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: vulnado-pipeline
spec:
  description: |
    Pipeline that automates security
  params:
    - name: repo-url
      type: string
      description: The Git repository URL.
    - name: revision
      type: string
      description: Optional git revision (branch, tag, or commit).
      default: "master"
    - name: iq-server-url
      type: string
      description: The URL of the Sonatype Nexus IQ Server.
      default: "http://34.18.141.239:8070/"
    - name: iq-application-id
      type: string
      description: The application ID in Nexus IQ Server.
      default: "1"
    - name: sonatype-auth-secret
      type: string
      description: The name of the Kubernetes secret containing Sonatype credentials.
      default: "sca-credentials"
    - name: ssc-url
      type: string
      description: The URL of the Fortify Software Security Center (SSC) server.
    - name: ssc-application-id
      type: string
      description: The application ID in SSC.
    - name: sensor-version
      type: string
      description: The version of the Fortify SAST sensor to use.
      default: "25.2"
    - name: ssc-auth-secret
      type: string
      description: The name of the Kubernetes secret containing SSC credentials.
      default: "ssc-credentials"
    - name: client-auth-token-secret
      type: string
      description: The name of the Kubernetes secret containing Client Auth Token credentials.
      default: "client-auth-token-secret"
    - name: run-sast-scan
      type: string
      description: Flag to determine whether to run the SAST scan.
      default: "false"
    - name: run-sca-scan
      type: string
      description: Flag to determine whether to run the SAST scan.
      default: "false"
    - name: run-build
      type: string
      description: Flag to determine whether to run the SAST scan.
      default: "false"
    - name: run-docker-1
      type: string
      description: Flag to determine whether to run the Docker 1.4 scan.
      default: "false"
    - name: run-docker-2
      type: string
      description: Flag to determine whether to run the Docker 2.0 scan.
      default: "false"
    - name: run-hadolint-scan
      type: string
      description: Flag to determine whether to run the Hadolint scan.
      default: "false"
    - name: run-trivy-scan
      type: string
      description: Flag to determine whether to run the Trivy image scan.
      default: "false"
    - name: run-kube-bench
      type: string
      description: Flag to determine whether to run the kube-bench CIS Kubernetes benchmark scan.
      default: "false"
    - name: run-dast-scan
      type: string
      description: Flag to determine whether to run the DAST scan.
      default: "false"
    - name: run-anchorer-scan
      type: string
      description: Flag to determine whether to run the Anchore image scan.
      default: "false"
    - name: target-url
      type: string
      description: The target URL to scan
    - name: scan-name
      type: string
      description: The name for the DAST scan
      default: "Pipeline-DAST-Scan"
    - name: scan-settings-id
      type: string
      description: The scan settings CI/CD token or ID
      default: "ssc-credentials"
    - name: scan-mode
      type: string
      description: Scan mode (CrawlOnly, CrawlAndAudit, AuditOnly)
      default: "CrawlAndAudit"
  workspaces:
    - name: shared-data
      description: Workspace for the cloned repo.
  tasks:
    - name: fetch-source
      displayName: "Checkout Source Code"
      taskRef:
        name: git-clone-restricted
      serviceAccountName: tekton-build-sa
      workspaces:
        - name: output
          workspace: shared-data
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.revision)
    - name: build
      onError: continue
      displayName: "Build Application"
      taskRef:
        name: build
      when:
        - input: "$(params.run-build)"
          operator: in
          values: ["true"]
      serviceAccountName: tekton-build-sa
      runAfter:
        - fetch-source
      workspaces:
        - name: source
          workspace: shared-data
    - name: sonatype-scan
      displayName: "Sonatype SCA Scan"
      taskRef:
        name: sonatype-scan
      runAfter:
        - build
      when:
        - input: "$(params.run-sca-scan)"
          operator: in
          values: ["true"]
      workspaces:
        - name: source
          workspace: shared-data
        - name: reports
          workspace: shared-data
      params:
        - name: iq-server-url
          value: $(params.iq-server-url)
        - name: iq-application-id
          value: $(params.iq-application-id)
        - name: sonatype-auth-secret
          value: $(params.sonatype-auth-secret)
    - name: sast-scan
      displayName: "SAST Scan"
      taskRef:
        name: sast
      runAfter: 
        - sonatype-scan
      when:
        - input: "$(params.run-sast-scan)"
          operator: in
          values: ["true"]
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: ssc-url
          value: $(params.ssc-url)
        - name: ssc-application-id
          value: $(params.ssc-application-id)
        - name: sensor-version
          value: $(params.sensor-version)
        - name: ssc-auth-secret
          value: $(params.ssc-auth-secret)
        - name: client-auth-token-secret
          value: $(params.client-auth-token-secret)
    - name: hadolint-scan
      displayName: "Dockerfile Scan - Hadolint"
      taskRef:
        name: hadolint-scan
      workspaces:
        - name: source
          workspace: shared-data
      when:
        - input: "$(params.run-hadolint-scan)"
          operator: in
          values: ["true"]
      runAfter:
        - fetch-source
    - name: build-docker-image
      displayName: "Build Docker Image - Buildah"
      taskRef:
        name: build-docker-image
      when:
        - input: "$(params.run-docker-1)"
          operator: in
          values: ["true"]
      runAfter:
        - sast-scan
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: image-name
          value: vulnado-app
        - name: dockerfile-path
          value: ./Dockerfile
        - name: context-path
          value: .
        - name: image-tag
          value: latest
    - name: build-docker-oc
      displayName: "Build Docker Image - OpenShift Workflow"
      taskRef:
        name: vulnado-build-and-scan
      runAfter:
        - build-docker-image
      when:
        - input: "$(params.run-docker-2)"
          operator: in
          values: ["true"]
      serviceAccountName: image-builder-sa
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: buildconfig-name
          value: vulnado-build-config
        - name: imagestream-name
          value: vulnado-image-stream
        - name: imagestream-tag
          value: latest
    - name: trivy-image-scan
      displayName: "Trivy Image Scan"
      taskRef:
        name: trivy-image-scan
      workspaces:
        - name: scan-data
          workspace: shared-data
      runAfter:
        - build-docker-oc
      when:
        - input: "$(params.run-trivy-scan)"
          operator: in
          values: ["true"]
      params:
        - name: imagestream-name
          value: vulnado-image-stream
        - name: imagestream-tag
          value: latest
        - name: exit-on-critical
          value: "false"
    - name: resolve
      displayName: "Resolve Image Reference"
      taskRef:
        name: resolve
      runAfter:
        - fetch-source
      params:
        - name: imagestream-name
          value: vulnado-image-stream
        - name: imagestream-tag
          value: latest
    - name: vulnado-anchore-scan
      displayName: "Anchore Image Scan"
      taskRef:
        name: vulnado-anchore-scan
      when:
        - input: "$(params.run-anchorer-scan)"
          operator: in
          values: ["true"]  
      runAfter:
        - resolve
      params:
        - name: image
          value: "$(tasks.resolve.results.image-ref)"
    - name: kube-bench
      displayName: "CIS Kubernetes Benchmark Scan"
      taskRef:
        name: kube-bench
      when:
        - input: "$(params.run-kube-bench)"
          operator: in
          values: ["true"]
      runAfter:
        - fetch-source
      params:
        - name: benchmark
          value: "rh-1.0"
        - name: image
          value: "docker.io/aquasec/kube-bench:v0.13.0-ubi-fips"
    - name: dast-scan
      displayName: "DAST Scan"
      taskRef:
        name: dast
      when:
        - input: "$(params.run-dast-scan)"
          operator: in
          values: ["true"]
      runAfter:
        - fetch-source
      workspaces:
        - name: source
          workspace: shared-data
      params:
        - name: target-url
          value: $(params.target-url)
        - name: scan-name
          value: $(params.scan-name)
        - name: scan-settings-id
          value: $(params.scan-settings-id)
        - name: ssc-url
          value: $(params.ssc-url)
        - name: ssc-auth-secret
          value: $(params.ssc-auth-secret)
        - name: scan-mode
          value: $(params.scan-mode)

















